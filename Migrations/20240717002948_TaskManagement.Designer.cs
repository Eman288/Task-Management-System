// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagementSystem.Data;

#nullable disable

namespace TaskManagementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240717002948_TaskManagement")]
    partial class TaskManagement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskManagementSystem.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectID"), 1L, 1);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(250)");

                    b.HasKey("ProjectID");

                    b.HasIndex("UserEmail");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TaskManagementSystem.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskID"), 1L, 1);

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("TaskColor")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaskContent")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("TaskCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TaskEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TaskStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskTotalTime")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(250)");

                    b.HasKey("TaskID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UserEmail");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskManagementSystem.Models.User", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("LongBreak")
                        .HasColumnType("int");

                    b.Property<int?>("Pomodoro")
                        .HasColumnType("int");

                    b.Property<int?>("Rounds")
                        .HasColumnType("int");

                    b.Property<int?>("ShortBreak")
                        .HasColumnType("int");

                    b.Property<int?>("TotalFocusTime")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserEmail");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskManagementSystem.Models.Project", b =>
                {
                    b.HasOne("TaskManagementSystem.Models.User", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserEmail");
                });

            modelBuilder.Entity("TaskManagementSystem.Models.Task", b =>
                {
                    b.HasOne("TaskManagementSystem.Models.Project", null)
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectID");

                    b.HasOne("TaskManagementSystem.Models.User", null)
                        .WithMany("Tasks")
                        .HasForeignKey("UserEmail");
                });

            modelBuilder.Entity("TaskManagementSystem.Models.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskManagementSystem.Models.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
